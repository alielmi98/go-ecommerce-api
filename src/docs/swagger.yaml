definitions:
  github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
      unit_price:
        type: number
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse'
        type: array
      id:
        type: integer
      total_items:
        type: integer
      total_price:
        type: number
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CheckOutRequest:
    properties:
      address:
        type: string
    required:
    - address
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateCart:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateCartItem:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateOrder:
    properties:
      address:
        type: string
      payment_id:
        type: integer
      status:
        type: string
      total_items:
        type: integer
      total_price:
        type: number
      user_id:
        type: integer
    required:
    - address
    - payment_id
    - status
    - total_items
    - total_price
    - user_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateOrderItem:
    properties:
      order_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      unit_price:
        type: number
    required:
    - order_id
    - product_id
    - quantity
    - unit_price
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreatePayment:
    properties:
      amount:
        type: number
      authority_id:
        type: string
      order_id:
        type: integer
      ref_id:
        type: integer
      status:
        type: string
      user_id:
        type: integer
    required:
    - amount
    - authority_id
    - order_id
    - ref_id
    - status
    - user_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreatePaymentUrl:
    properties:
      order_id:
        type: integer
    required:
    - order_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductImageRequest:
    properties:
      image_id:
        type: integer
      is_main:
        type: boolean
      product_id:
        type: integer
    required:
    - image_id
    - product_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      price:
        type: number
      slug:
        type: string
      status:
        type: string
      stock:
        type: integer
    required:
    - category_id
    - name
    - price
    - status
    - stock
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductReviewRequest:
    properties:
      comment:
        type: string
      product_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    required:
    - product_id
    - rating
    - user_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.FileResponse:
    properties:
      description:
        type: string
      directory:
        type: string
      id:
        type: integer
      mimeType:
        type: string
      name:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.LoginByUsernameRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse:
    properties:
      order_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      unit_price:
        type: number
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: integer
      payment_id:
        type: integer
      products:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
        type: array
      status:
        type: string
      total_items:
        type: integer
      total_price:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.PaymentVerificationResponse:
    properties:
      payment_id:
        type: integer
      ref_id:
        type: integer
      status:
        type: string
    required:
    - payment_id
    - ref_id
    - status
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse:
    properties:
      id:
        description: This field is not used in the request, but it's included for
          consistency with the response
        type: integer
      image_id:
        type: integer
      is_main:
        type: boolean
      product_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse:
    properties:
      average_rating:
        type: number
      category:
        $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
      category_id:
        type: integer
      count_views:
        type: integer
      created_at:
        type: string
      description:
        type: string
      images:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
        type: array
      name:
        type: string
      price:
        type: number
      reviews:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
        type: array
      slug:
        type: string
      status:
        type: string
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse:
    properties:
      comment:
        type: string
      product_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.RegisterUserByUsernameRequest:
    properties:
      email:
        minLength: 6
        type: string
      firstName:
        minLength: 3
        type: string
      lastName:
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - firstName
    - lastName
    - password
    - username
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePayment:
    properties:
      amount:
        type: number
      authority_id:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      ref_id:
        type: integer
      status:
        type: string
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePaymentUrl:
    properties:
      payment_url:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCart:
    properties:
      total_items:
        type: integer
      total_price:
        type: number
    required:
    - total_items
    - total_price
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCartItem:
    properties:
      quantity:
        type: integer
    required:
    - quantity
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateFileRequest:
    properties:
      description:
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateOrder:
    properties:
      address:
        type: string
      payment_id:
        type: integer
      status:
        type: string
      total_items:
        type: integer
      total_price:
        type: number
      user_id:
        type: integer
    required:
    - address
    - payment_id
    - status
    - total_items
    - total_price
    - user_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateOrderItem:
    properties:
      order_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      unit_price:
        type: number
    required:
    - order_id
    - product_id
    - quantity
    - unit_price
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdatePayment:
    properties:
      amount:
        type: number
      authority_id:
        type: string
      order_id:
        type: integer
      ref_id:
        type: integer
      status:
        type: string
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductImageRequest:
    properties:
      image_id:
        type: integer
      is_main:
        type: boolean
      product_id:
        type: integer
    required:
    - is_main
    - product_id
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      price:
        type: number
      slug:
        type: string
      status:
        type: string
      stock:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductReviewRequest:
    properties:
      comment:
        type: string
      product_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse:
    properties:
      error: {}
      result: {}
      resultCode:
        $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.ResultCode'
      success:
        type: boolean
    type: object
  github_com_alielmi98_go-ecommerce-api_api_helper.ResultCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40301
    - 40401
    - 42901
    - 42902
    - 50001
    - 50002
    - 50003
    - 50004
    - 50005
    - 40002
    type: integer
    x-enum-varnames:
    - Success
    - ValidationError
    - AuthError
    - ForbiddenError
    - NotFoundError
    - LimiterError
    - OtpLimiterError
    - CustomRecovery
    - InternalError
    - InvalidInputError
    - DatabaseError
    - UnknownError
    - BadRequest
  github_com_alielmi98_go-ecommerce-api_domain_filter.Filter:
    properties:
      filterType:
        description: text number
        type: string
      from:
        type: string
      to:
        type: string
      type:
        description: contains notContains equals notEqual startsWith lessThan lessThanOrEqual
          greaterThan greaterThanOrEqual inRange endsWith
        type: string
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_CategoryResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_FileResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.FileResponse'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductImageResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  ? github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductReviewResponse
  : properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ResponsePayment:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePayment'
        type: array
      pageNumber:
        type: integer
      pageSize:
        type: integer
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter:
    properties:
      filter:
        additionalProperties:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.Filter'
        type: object
      pageNumber:
        type: integer
      pageSize:
        type: integer
      sort:
        items:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.Sort'
        type: array
    type: object
  github_com_alielmi98_go-ecommerce-api_domain_filter.Sort:
    properties:
      colId:
        type: string
      sort:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/account/login-by-username:
    post:
      consumes:
      - application/json
      description: LoginByUsername
      parameters:
      - description: LoginByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.LoginByUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "401":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: LoginByUsername
      tags:
      - Account
  /v1/account/register-by-username:
    post:
      consumes:
      - application/json
      description: RegisterByUsername
      parameters:
      - description: RegisterUserByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.RegisterUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: RegisterByUsername
      tags:
      - Account
  /v1/shop/cart-items/:
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Create a CartItem
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateCartItem'
      responses:
        "201":
          description: CartItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a CartItem
      tags:
      - CartItem
  /v1/shop/cart-items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a CartItem
      parameters:
      - description: CartItem ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: CartItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a CartItem
      tags:
      - CartItem
    get:
      consumes:
      - application/json
      description: Get a CartItem by ID
      parameters:
      - description: CartItem ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: CartItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a CartItem by ID
      tags:
      - CartItem
    put:
      consumes:
      - application/json
      description: Update a CartItem
      parameters:
      - description: CartItem ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update a CartItem
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCartItem'
      responses:
        "200":
          description: CartItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a CartItem
      tags:
      - CartItem
  /v1/shop/carts/:
    get:
      consumes:
      - application/json
      description: Get a User Cart By User ID
      responses:
        "200":
          description: Cart response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a User Cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Create a Cart
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateCart'
      responses:
        "201":
          description: Cart response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a Cart
      tags:
      - Cart
  /v1/shop/carts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Cart
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Cart response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a Cart
      tags:
      - Cart
    get:
      consumes:
      - application/json
      description: Get a Cart by ID
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Cart response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a Cart by ID
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: Update a Cart
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Cart
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCart'
      responses:
        "200":
          description: Cart response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CartResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a Cart
      tags:
      - Cart
  /v1/shop/categories/:
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Create a Category
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateCategoryRequest'
      responses:
        "201":
          description: Category response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a Category
      tags:
      - Category
  /v1/shop/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Category
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Category response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a Category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get a Category
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Category response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update a Category
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Category
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateCategoryRequest'
      responses:
        "200":
          description: Category response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CategoryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a Category
      tags:
      - Category
  /v1/shop/categories/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get Categories
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: Category response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_CategoryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get Categories
      tags:
      - Category
  /v1/shop/checkout/:
    post:
      consumes:
      - application/json
      description: Create a new order from the items in the user's cart
      parameters:
      - description: Check out request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CheckOutRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create an order from the cart
      tags:
      - checkout
  /v1/shop/files/:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a file
      parameters:
      - in: formData
        name: description
        required: true
        type: string
      - description: Create a file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "201":
          description: File response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.FileResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a file
      tags:
      - Files
  /v1/shop/files/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a file
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a file
      tags:
      - Files
    get:
      consumes:
      - application/json
      description: Get a file
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: File response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.FileResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a file
      tags:
      - Files
    put:
      consumes:
      - application/json
      description: Update a file
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a file
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateFileRequest'
      responses:
        "200":
          description: File response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.FileResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a file
      tags:
      - Files
  /v1/shop/files/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get Files
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: File response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_FileResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get Files
      tags:
      - Files
  /v1/shop/order-items/:
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Create a OrderItem
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateOrderItem'
      responses:
        "201":
          description: OrderItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a OrderItem
      tags:
      - OrderItem
  /v1/shop/order-items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a OrderItem
      parameters:
      - description: OrderItem ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OrderItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a OrderItem
      tags:
      - OrderItem
    get:
      consumes:
      - application/json
      description: Get a OrderItem
      parameters:
      - description: OrderItem ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OrderItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a OrderItemBy ID
      tags:
      - OrderItem
    put:
      consumes:
      - application/json
      description: Update a OrderItem
      parameters:
      - description: OrderItem ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update a OrderItem
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateOrderItem'
      responses:
        "200":
          description: OrderItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a OrderItem
      tags:
      - OrderItem
  /v1/shop/order-items/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get a OrderItem By Filter
      parameters:
      - description: Get a OrderItem By Filter
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: OrderItem response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderItemResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a OrderItem By Filter
      tags:
      - OrderItem
  /v1/shop/orders/:
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Create a Order
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateOrder'
      responses:
        "201":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a Order
      tags:
      - Order
  /v1/shop/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get a Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a OrderBy ID
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update a Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Order
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateOrder'
      responses:
        "200":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a Order
      tags:
      - Order
  /v1/shop/orders/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get a Order By Filter
      parameters:
      - description: Get a Order By Filter
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.OrderResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a Order By Filter
      tags:
      - Order
  /v1/shop/payments:
    get:
      consumes:
      - application/json
      description: Get a list of payment records based on filter criteria
      parameters:
      - description: Filter criteria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      produces:
      - application/json
      responses:
        "200":
          description: Payments response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ResponsePayment'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: Get Payments by Filter
      tags:
      - Payment
  /v1/shop/payments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing payment record
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: Delete a Payment
      tags:
      - Payment
    get:
      consumes:
      - application/json
      description: Get an existing payment record by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payment response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePayment'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: Get a Payment by ID
      tags:
      - Payment
    put:
      consumes:
      - application/json
      description: Update an existing payment record
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      - description: UpdatePaymentRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdatePayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePayment'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: Update a Payment
      tags:
      - Payment
  /v1/shop/payments/create:
    post:
      consumes:
      - application/json
      description: Create a new payment record
      parameters:
      - description: CreatePaymentRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreatePayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.PaymentVerificationResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: Create a Payment
      tags:
      - Payment
  /v1/shop/payments/create-url:
    post:
      consumes:
      - application/json
      description: Create a Payment URL for a specific order
      parameters:
      - description: CreatePaymentRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreatePaymentUrl'
      produces:
      - application/json
      responses:
        "200":
          description: Order response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ResponsePaymentUrl'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a Payment URL
      tags:
      - Payment
  /v1/shop/product-images/:
    post:
      consumes:
      - application/json
      description: Create a ProductImage
      parameters:
      - description: Create a ProductImage
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductImageRequest'
      responses:
        "201":
          description: ProductImage response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a ProductImage
      tags:
      - ProductImage
  /v1/shop/product-images/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a ProductImage
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ProductImage response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a ProductImage
      tags:
      - ProductImage
    get:
      consumes:
      - application/json
      description: Get a ProductImage
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ProductImage response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a ProductImage
      tags:
      - ProductImage
    put:
      consumes:
      - application/json
      description: Update a ProductImage
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a ProductImage
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductImageRequest'
      responses:
        "200":
          description: ProductImage response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductImageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a ProductImage
      tags:
      - ProductImage
  /v1/shop/product-images/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get ProductImages
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: ProductImage response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductImageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get ProductImages
      tags:
      - ProductImage
  /v1/shop/product-reviews/:
    post:
      consumes:
      - application/json
      description: Create a ProductReview
      parameters:
      - description: Create a ProductReview
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductReviewRequest'
      responses:
        "201":
          description: ProductReview response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a ProductReview
      tags:
      - ProductReview
  /v1/shop/product-reviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a ProductReview
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ProductReview response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a ProductReview
      tags:
      - ProductReview
    get:
      consumes:
      - application/json
      description: Get a ProductReview
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ProductReview response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a ProductReview
      tags:
      - ProductReview
    put:
      consumes:
      - application/json
      description: Update a ProductReview
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a ProductReview
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductReviewRequest'
      responses:
        "200":
          description: ProductReview response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductReviewResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a ProductReview
      tags:
      - ProductReview
  /v1/shop/product-reviews/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get ProductReviews
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: ProductReview response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductReviewResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get ProductReviews
      tags:
      - ProductReview
  /v1/shop/products/:
    post:
      consumes:
      - application/json
      description: Create a Product
      parameters:
      - description: Create a Product
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.CreateProductRequest'
      responses:
        "201":
          description: Product response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a Product
      tags:
      - Product
  /v1/shop/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Product
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Product response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get a Product
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Product response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update a Product
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Product
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.UpdateProductRequest'
      responses:
        "200":
          description: Product response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_dto.ProductResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a Product
      tags:
      - Product
  /v1/shop/products/get-by-filter:
    post:
      consumes:
      - application/json
      description: Get products
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PaginationInputWithFilter'
      responses:
        "200":
          description: Product response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_domain_filter.PagedList-github_com_alielmi98_go-ecommerce-api_api_dto_ProductResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get products
      tags:
      - Product
  /v1/token/refresh-token:
    post:
      consumes:
      - application/json
      description: RefreshToken
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
        "401":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-ecommerce-api_api_helper.BaseHttpResponse'
      summary: RefreshToken
      tags:
      - Token
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
